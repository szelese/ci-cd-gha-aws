name: Deploy to Elastic Beanstalk

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-north-1
  APP_NAME: mysite
  ENV_NAME: Mysite-env-2
  S3_BUCKET: elasticbeanstalk-eu-north-1-330552995255

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies (optional)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::330552995255:role/GitHubOIDC-EBDeploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Create EB application bundle
        run: |
          zip -r app.zip . \
            -x ".git/*" ".github/*" "__pycache__/*" "*.pyc" ".venv/*"

      - name: Compute version label
        id: ver
        run: |
          echo "VERSION_LABEL=$(date +'%Y%m%d-%H%M%S')-${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT

      - name: Upload bundle to S3
        run: |
          aws s3 cp app.zip s3://$S3_BUCKET/$APP_NAME/${{ steps.ver.outputs.VERSION_LABEL }}.zip

      - name: Create new EB application version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name "$APP_NAME" \
            --version-label "${{ steps.ver.outputs.VERSION_LABEL }}" \
            --source-bundle S3Bucket="$S3_BUCKET",S3Key="$APP_NAME/${{ steps.ver.outputs.VERSION_LABEL }}.zip"

      - name: Update EB environment
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name "$ENV_NAME" \
            --version-label "${{ steps.ver.outputs.VERSION_LABEL }}"

      - name: Wait for EB to be Ready/Green (max ~12 min)
        shell: bash
        run: |
          set -euo pipefail
          # 72 × 10s = ~12 perc várakozási ablak
          for i in {1..72}; do
            read -r STATUS HEALTH <<<"$(aws elasticbeanstalk describe-environments \
              --application-name "$APP_NAME" \
              --environment-names "$ENV_NAME" \
              --query 'Environments[0].[Status,Health]' \
              --output text)"
            echo "[$i/72] Status=$STATUS  Health=$HEALTH"

            # a Green-t az új UI néha 'Ok'-nak írja
            if [[ "$STATUS" == "Ready" && ( "$HEALTH" == "Green" || "$HEALTH" == "Ok" ) ]]; then
              echo "Environment is Ready & Green/Ok ✅"
              exit 0
            fi
            sleep 10
          done

          echo "⛔ Timed out waiting for Ready/Green. Latest events:"
          aws elasticbeanstalk describe-events \
            --environment-name "$ENV_NAME" \
            --max-items 25 \
            --query 'Events[*].[EventDate,Severity,Message]' \
            --output table || true
          exit 1

